                BUILDING AND INSTALLING QicsTable

You may need to be logged in as root, depending on the permissions of
the directories where you choose to install QicsTable.

QicsTable is built with, and depends on, Qt version 4.7.0 and newer.
You must have Qt installed on the machine that you are using to build
QicsTable.

In the following instructions, <QICSTABLE> refers to the toplevel
directory of the QicsTable distribution.  For example, if you
unpacked the Linux/Unix archive in /opt, <QICSTABLE> would refer to
/opt/qicstable-x.x.x-unix-commercial-source.tar.gz

In the case of binding QicsTable to KDChart, please note that only KDChart 2.x 
is supported; any previous versions would not work. <KDCHART> refers to the
toplevel directory of the KDChart distribution.

1.  Unpack the archive.
    On Linux/Unix:  - 'tar xzvf qicstable-x.x.x-unix-commercial-source.tar.gz'
    On Windows:     - Unzip qicstable-x.x.x-win32-commercial-source.zip using WinZip
		      or similar utility.  Be sure to extract the
		      entire folder hierarchy.

2.  By default, QicsTable will build with the following options:
    - 'release' build
    - shared library/DLL

    If you wish to change any of these options, edit the configuration
    file <QICSTABLE>/qicstable_config.pri.  Each option is documented in
    the configuration file.
    
    For MacOS by default used specfile 'macx-g++'. If you want to 
    change it to 'macx-xcode' edit file <QICSTABLE>/qicstable_config.pri
     in section MacOS X configuration.

3.  If you would like to enable KDChart support, do the following:

    a. Install KDChart 2.1+ to a directory on the filesystem (see KDChart
        documentation for details). <KDCHART> would point to the root
        of the installation.

    b. Go to <QICSTABLE>/qicstable_config.pri file and find a line 

        #KDCHART_PATH =

       Uncomment this line and write here the value of <KDCHART>.
       For example, if KDChart has been installed into /opt/kdchart-2.1
       then the given line should look like:

        KDCHART_PATH = /opt/kdchart-2.1 

       That's all - KDChart support enabled. Save the file and follow the 
       next paragraphs.

4.  Currently, QicsTable builds using the Qt utility 'qmake'. 

    Before running qmake, make sure you have the correct version of
    qmake installed and findable first in your path. On Debian/Ubuntu systems,
    root can select and set symlinks from /usr/bin to the preferred version of
    multiple alternate installed versions with this command:

    % update-alternatives --config qmake
    
    Afterwards, check the version you are running
    
    % qmake -version
    
    Note, for people who have QTDIR set: that environment variable is
    not required in Qt4.
    
    % qmake qicstable.pro
    
    If you have problems with building QicsTable on MacOS try steps below.
    On MacOS X you can use gcc compiler to build QicsTable:

    % qmake -spec macx-g++ qicstable.pro
    
    or xcode
    
    %qmake -spec macx-xcode qicstable.pro

5.  Once the toplevel makefile is built, you may build the distribution.
    On Linux/Unix:   - 'make' or 'gmake'
    On Windows(MSVC) - 'nmake'
    This will build the QicsTable library and all the examples.
    
    In case of compiling QicsTable with debug_and_release option
    type 'make all' or 'nmake all' to compile both versions
    of libraries.



6.  Online HTML documentation can be found in <QICSTABLE>/doc/html.  The
    main page is 'index.html'.

7.  Examples can be found in <QICSTABLE>/examples.

8.  On Windows, you will need to modify your Path environment variable
    in order for the example programs to find the QicsTable DLL.  This
    can be done in a number of different ways, depending on the
    version of Windows that you are running.  One way that will always
    work is via the command line.

    C:>  set Path=<QICSTABLE>/lib;%Path%

    As before, replace <QICSTABLE> with the full path to the directory
    in which you unpacked the archive.
