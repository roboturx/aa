// QicsHeaderGrid.sip generated by MetaSIP on Thu Aug 26 12:32:36 2010
//
// This file is part of the qicstable Python extension module.
//
// Copyright (c) 2004 - 2014
// 	Integrated Computer Solutions, Inc. <info@ics.com>
// 
// This file is part of PyQicsTable.
// 
// This copy of PyQicsTable is licensed for use under the terms of the
// PyQicsTable Commercial License Agreement version ICS-2.6.  See the file
// LICENSE for more details.
// 
// PyQicsTable is supplied WITHOUT ANY WARRANTY; without even the implied
// warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.


class QicsHeaderGrid : QicsScreenGrid
{
%TypeHeaderCode
#include <QicsHeaderGrid.h>
%End

public:
    QicsHeaderGrid(QWidget * /TransferThis/, QicsGridInfo &, Qics::QicsHeaderType);
    virtual ~QicsHeaderGrid();
    Qics::QicsHeaderType type() const;
    virtual QicsRegion currentViewport() const;
    int gripThreshold() const;
    void setGripThreshold(int);
    typedef QicsHeaderGrid * (*Foundry)(QWidget *, QicsGridInfo &, Qics::QicsHeaderType);
    typedef QicsHeaderGrid * (*FoundryWithKey)(QWidget *, QicsGridInfo &, Qics::QicsHeaderType, void *);
    static QicsHeaderGrid *createGrid(QWidget * /TransferThis/, QicsGridInfo &, Qics::QicsHeaderType) /Factory/;

signals:
    void sizeChange(int, int, int, Qics::QicsHeaderType);
    void resizeInProgress(int, int, Qics::QicsHeaderType);
    void gripDoubleClicked(int, int, Qics::QicsHeaderType);

protected:
    virtual QSize sizeHint() const;
    virtual void handleMousePressEvent(const QicsICell &, QMouseEvent *);
    virtual void handleMouseReleaseEvent(const QicsICell &, QMouseEvent *);
    virtual void handleMouseMoveEvent(const QicsICell &, QMouseEvent *);
    virtual void handleMouseDoubleClickEvent(const QicsICell &, QMouseEvent *);
    virtual void keyPressEvent(QKeyEvent *);
    virtual void dragMoveEvent(QDragMoveEvent *);
    virtual bool canDropAt(QDragMoveEvent *, const QicsICell &) const;
    virtual void dropAt(QDropEvent *, const QicsICell &);
    bool isWithinResizeThreshold(int, int, int *, int *) const;
    bool setResizeCursor(QMouseEvent *);
    void handleCellResize(QMouseEvent *);
    void finishResize();
    virtual void selectCell(int, int);
    void beginSelection(int, int);
    void endSelection(int, int);
    void extendSelection(int, int);
    void addSelection(int, int);
    void clearSelection();
    void dragSelection(QMouseEvent *);
    void reportSelection(int, int, Qics::QicsSelectionType);
    // vtorshyn: for old version is QDragObject::DragMode. For PyQt4 is Qt::DropAction
    virtual void startDrag(Qt::DropAction);
    virtual void reset();
};

