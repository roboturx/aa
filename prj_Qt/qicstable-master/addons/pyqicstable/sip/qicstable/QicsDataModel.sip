// QicsDataModel.sip generated by MetaSIP on Thu Aug 26 12:32:36 2010
//
// This file is part of the qicstable Python extension module.
//
// Copyright (c) 2004 - 2014
// 	Integrated Computer Solutions, Inc. <info@ics.com>
// 
// This file is part of PyQicsTable.
// 
// This copy of PyQicsTable is licensed for use under the terms of the
// PyQicsTable Commercial License Agreement version ICS-2.6.  See the file
// LICENSE for more details.
// 
// PyQicsTable is supplied WITHOUT ANY WARRANTY; without even the implied
// warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.


typedef QVector<const QicsDataItem*> QicsDataModelColumn;
typedef QVector<const QicsDataItem*> QicsDataModelRow;

class QicsDataModel : QObject, Qics
{
%TypeHeaderCode
#include <QicsDataModel.h>
%End

public:
    QicsDataModel(int = 0, int = 0);
    virtual ~QicsDataModel();
    int numRows() const;
    int numColumns() const;
    int lastRow() const;
    int lastColumn() const;
    bool contains(int, int) const;
    virtual const QicsDataItem *item(int, int) const = 0;
    virtual QString itemString(int, int) const;
    virtual QicsDataModelRow rowItems(int, int = 0, int = -1) const = 0;
    virtual QicsDataModelColumn columnItems(int, int = 0, int = -1) const = 0;
    virtual void setRowItems(int, const QicsDataModelRow &) = 0;
    virtual void setColumnItems(int, const QicsDataModelColumn &) = 0;
    bool emitSignals() const;
    void setEmitSignals(bool);
    void readASCII(QTextStream &, const char = ';', int = 0, int = 0, bool = false);
    void writeASCII(QTextStream &, const char = ';', int = 0, int = 0, int = -1, int = -1);
    typedef QicsDataModel * (*Foundry)(int, int);
    typedef QicsDataModel * (*FoundryWithKey)(int, int, void *);

public slots:
    virtual void setItem(int, int, const QicsDataItem &) = 0;
    virtual void setItem(int, int, int /Constrained/);
    virtual void setItem(int, int, double);
    virtual void setItem(int, int, const QString &);
    virtual void setItem(int, int, const QDate &);
    virtual void setItem(int, int, const QTime &);
    virtual void setItem(int, int, const QDateTime &);
    virtual void insertRows(int, int) = 0;
    virtual void insertColumns(int, int) = 0;
    virtual void addRows(int) = 0;
    virtual void addColumns(int) = 0;
    virtual void deleteRow(int) = 0;
    virtual void deleteRows(int, int) = 0;
    virtual void deleteColumn(int) = 0;
    virtual void deleteColumns(int, int) = 0;
    virtual void clearItem(int, int) = 0;
    virtual void clearModel() = 0;

signals:
    void modelChanged(QicsRegion);
    void modelSizeChanged(int, int);
    void rowsInserted(int, int);
    void columnsInserted(int, int);
    void rowsDeleted(int, int);
    void columnsDeleted(int, int);
    void rowsAdded(int);
    void columnsAdded(int);
    void cellValueChanged(int, int);

private:
    QicsDataModel(const QicsDataModel &);
protected:
    void setNumRows(int);

    void setNumColumns(int);
};

