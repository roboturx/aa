// QicsTableGrid.sip generated by MetaSIP on Thu Aug 26 12:32:36 2010
//
// This file is part of the qicstable Python extension module.
//
// Copyright (c) 2004 - 2014
// 	Integrated Computer Solutions, Inc. <info@ics.com>
// 
// This file is part of PyQicsTable.
// 
// This copy of PyQicsTable is licensed for use under the terms of the
// PyQicsTable Commercial License Agreement version ICS-2.6.  See the file
// LICENSE for more details.
// 
// PyQicsTable is supplied WITHOUT ANY WARRANTY; without even the implied
// warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.


class QicsTableGrid : QicsScreenGrid
{
%TypeHeaderCode
#include <QicsTableGrid.h>
%End

public:
    QicsTableGrid(QWidget * /TransferThis/, QicsGridInfo &, int = 0, int = 0);
    virtual ~QicsTableGrid();
    virtual void reset();
    typedef QicsTableGrid * (*Foundry)(QWidget *, QicsGridInfo &, int, int);
    typedef QicsTableGrid * (*FoundryWithKey)(QWidget *, QicsGridInfo &, int, int, void *);
    static QicsTableGrid *createGrid(QWidget * /TransferThis/, QicsGridInfo &, int = 0, int = 0) /Factory/;

protected:
    virtual bool event(QEvent *);
    virtual void handleMousePressEvent(const QicsICell &, QMouseEvent *);
    virtual void handleMouseReleaseEvent(const QicsICell &, QMouseEvent *);
    virtual void handleMouseDoubleClickEvent(const QicsICell &, QMouseEvent *);
    virtual void handleMouseMoveEvent(const QicsICell &, QMouseEvent *);
    virtual void focusInEvent(QFocusEvent *);
    virtual void focusOutEvent(QFocusEvent *);
    virtual void dragMoveEvent(QDragMoveEvent *);
    virtual bool canDropAt(QDragMoveEvent *, const QicsICell &) const;
    virtual void dropAt(QDropEvent *, const QicsICell &);
    virtual void selectCell(int, int);
    void setSelectionAnchorCell(QicsICell *);
    void setSelectionCurrentCell(QicsICell *);
    void beginSelection(int, int);
    void endSelection(int, int);
    void dragSelection(int, int);
    void extendSelection(int, int);
    void addSelection(int, int);
    void clearSelection();
    void reportSelection(int, int, Qics::QicsSelectionType);
};

